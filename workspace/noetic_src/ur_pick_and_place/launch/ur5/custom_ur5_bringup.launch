<?xml version="1.0"?>
<launch>
  <!-- Bringup UR5 -->
  <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_common.launch"/>
  <arg name="robot_ip" default="192.168.1.3" doc="IP address by which the robot can be reached."/>
  <arg name="reverse_ip" default="" doc="IP of the driver, if set to empty it will detect it automatically."/>
  <arg name="reverse_port" default="50001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
  <arg name="script_sender_port" default="50002" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
  <arg name="trajectory_port" default="50003" doc="Port that will be opened by the driver to allow trajectory forwarding."/>
  <arg name="script_command_port" default="50004" doc="Port that will be opened by the driver to allow forwarding script commands to the robot."/>
  <arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
  <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>
  <arg name="controller_config_file" default="$(find ur_pick_and_place)/config/ur5/controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <!-- change to custom robot description file -->
  <arg name="robot_description_file" default="$(find ur_pick_and_place)/launch/ur5/custom_load_ur5.launch" doc="Robot description launch file."/>
  <arg name="kinematics_config" default="$(find ur_pick_and_place)/config/ur5/calibration.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
  <arg name="headless_mode" default="false" doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>
  <arg name="ur_hardware_interface_node_required" default="true" doc="Shut down ros environment if ur_hardware_interface-node dies."/>

  <include file="$(find ur_pick_and_place)/launch/ur5/custom_ur_common.launch">
    <arg name="use_tool_communication" value="false"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="robot_ip" value="$(arg robot_ip)"/>
    <arg name="reverse_ip" value="$(arg reverse_ip)"/>
    <arg name="reverse_port" value="$(arg reverse_port)"/>
    <arg name="script_sender_port" value="$(arg script_sender_port)"/>
    <arg name="trajectory_port" value="$(arg trajectory_port)"/>
    <arg name="script_command_port" value="$(arg script_command_port)"/>
    <arg name="tf_prefix" value="$(arg tf_prefix)"/>
    <arg name="controllers" value="$(arg controllers)"/>
    <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
    <arg name="controller_config_file" value="$(arg controller_config_file)"/>
    <arg name="robot_description_file" value="$(arg robot_description_file)"/>
    <arg name="kinematics_config" value="$(arg kinematics_config)"/>
    <arg name="headless_mode" value="$(arg headless_mode)"/>
    <arg name="ur_hardware_interface_node_required" value="$(arg ur_hardware_interface_node_required)"/>
  </include>


  <!-- Action Server Robotiq Gripper -->
  <arg name="sim" default="false"/>
  <arg name="comport" default="/dev/ttyUSB0" unless="$(arg sim)"/> 
  <arg name="baud" default="115200" unless="$(arg sim)"/> 
  <arg name="rate" default="125" doc="Frequenzy in Herz of gripper state update"/>

  <include file="$(find ur_pick_and_place)/launch/gripper2f85/robotiq_action_server.launch">
    <arg name="comport" value="$(arg comport)" unless="$(arg sim)"/>
    <arg name="baud" value="$(arg baud)" unless="$(arg sim)"/>
    <arg name="stroke" value="0.085"/>
    <arg name="rate" value="$(arg rate)"/>
    <arg name="joint_name" value="finger_joint"/>
    <arg name="verbose" value="true"/>
    <arg name="sim" value="$(arg sim)"/>
    <arg name="robot_description_file" value="$(arg robot_description_file)"/>
  </include>

  <!-- parameters on robot description has already filled by default -->
  <!-- robot + gripper model -->
  <include file="$(arg robot_description_file)"/>

  <!-- Convert robot states to /tf tranforms -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" type="double" value="100.0" />
  </node>

  <!-- Convert joint states to /tf tranforms -->
  <!-- Necessary to load gripper urdf -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
    <rosparam param="source_list">[/joint_states]</rosparam>
    <rosparam param="use_gui">false</rosparam>
  </node>
  
</launch>
